@using TypingFast.Models
@using TypingFast.Services
@* TODO: remove after testing *@
<h2>Status: @_test.Status</h2>
<h2>is last word: @_test.CurrentIndex @_test.GetWords().Length -> @(_test.CurrentIndex == _test.GetWords().Length)</h2>
<div class="d-flex flex-column gap-2">
    <WordDisplay Test="@_test"/>

    <div>
        <input type="text"
               value="@CurrentInput"
               class="input @(_test.InputError ? "bg-danger-subtle" : "")"
               @oninput="HandleInput"/>

        <button @onclick="NewTest" class="btn btn-primary">new</button>
    </div>
    <div>
        @CurrentInput
    </div>
</div>

@code{

    private TypingTest _test = new(new WordsService());
    private string CurrentInput { get; set; } = "";

    private void NewTest()
    {
        _test.Restart();
    }

    private void HandleInput(ChangeEventArgs obj)
    {
        CurrentInput = obj.Value?.ToString() ?? "";
        if (CurrentInput[CurrentInput.Length - 1] == ' ')
        {
            _test.ConsumeWord(CurrentInput.Substring(0, CurrentInput.Length -1));
            CurrentInput = "";
            return;
        }

        _test.CheckWord(CurrentInput, _test.GetWords().Length - 1 == _test.CurrentIndex);
    }

}
